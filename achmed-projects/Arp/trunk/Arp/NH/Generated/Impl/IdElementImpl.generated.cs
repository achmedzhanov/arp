
/*
This file was generated by Arp.Generator
*/
#region Imports
using JetBrains.ReSharper.Psi.Xml.Tree;
using JetBrains.ReSharper.Psi.Xml.Impl.Tree;
using System.Collections.Generic;
using JetBrains.ReSharper.Psi.Tree;
using JetBrains.ReSharper.Psi.ExtensionsAPI.Tree;
#endregion

namespace Arp.NH.Psi.Tree.Impl
{
    public partial class IdElementImpl : XmlTag,  IIdElement
    {

        #region Role ids

        private const int Meta_ROLE_ID = 1;

        private const int Column_ROLE_ID = 2;

        private const int Generator_ROLE_ID = 3;

        #endregion

        #region Constructor 

        public IdElementImpl() : base(ElementType.IdElementImpl_ELEMENT) {}

        #endregion

        #region Attributes


        public IXmlAttribute NameAttribute 
        {
            get
            {
                return base.GetAttribute("name");
            }
        }

        public IXmlAttribute AccessAttribute 
        {
            get
            {
                return base.GetAttribute("access");
            }
        }

        public IXmlAttribute ColumnAttribute 
        {
            get
            {
                return base.GetAttribute("column");
            }
        }

        public IXmlAttribute TypeAttribute 
        {
            get
            {
                return base.GetAttribute("type");
            }
        }

        public IXmlAttribute LengthAttribute 
        {
            get
            {
                return base.GetAttribute("length");
            }
        }

        public IXmlAttribute UnsavedValueAttribute 
        {
            get
            {
                return base.GetAttribute("unsaved-value");
            }
        }

        #endregion

        #region Elements


        public IMetaElement Meta
        {
            get
            {
                return (IMetaElement)FindChildByRole(Meta_ROLE_ID);
            }
        }

        public IColumnElement Column
        {
            get
            {
                return (IColumnElement)FindChildByRole(Column_ROLE_ID);
            }
        }

        public IGeneratorElement Generator
        {
            get
            {
                return (IGeneratorElement)FindChildByRole(Generator_ROLE_ID);
            }
        }


        #endregion

 

        public override short GetChildRole(TreeElement child)
        {

                if (child is IMetaElement && ((XmlTag)child).TagName == "meta")
                    return Meta_ROLE_ID;
                else 
                
                if (child is IColumnElement && ((XmlTag)child).TagName == "column")
                    return Column_ROLE_ID;
                else 
                
                if (child is IGeneratorElement && ((XmlTag)child).TagName == "generator")
                    return Generator_ROLE_ID;
                else 
                
        return base.GetChildRole(child);
        }
    }
}
