
/*
This file was generated by Arp.Generator
*/
#region Imports
using JetBrains.ReSharper.Psi.Xml.Tree;
using JetBrains.ReSharper.Psi.Xml.Impl.Tree;
using System.Collections.Generic;
using JetBrains.ReSharper.Psi.Tree;
using JetBrains.ReSharper.Psi.ExtensionsAPI.Tree;
#endregion

namespace Arp.NH.Psi.Tree.Impl
{
    public partial class PrimitiveArrayElementImpl : XmlTag,  IPrimitiveArrayElement
    {

        #region Role ids

        private const int Meta_ROLE_ID = 20;

        private const int JcsCache_ROLE_ID = 21;

        private const int Cache_ROLE_ID = 22;

        private const int Key_ROLE_ID = 23;

        private const int Index_ROLE_ID = 24;

        private const int Element_ROLE_ID = 25;

        #endregion

        #region Constructor 

        public PrimitiveArrayElementImpl() : base(ElementType.PrimitiveArrayElementImpl_ELEMENT) {}

        #endregion

        #region Attributes


        public IXmlAttribute NameAttribute 
        {
            get
            {
                return base.GetAttribute("name");
            }
        }

        public IXmlAttribute AccessAttribute 
        {
            get
            {
                return base.GetAttribute("access");
            }
        }

        public IXmlAttribute TableAttribute 
        {
            get
            {
                return base.GetAttribute("table");
            }
        }

        public IXmlAttribute SchemaAttribute 
        {
            get
            {
                return base.GetAttribute("schema");
            }
        }

        public IXmlAttribute WhereAttribute 
        {
            get
            {
                return base.GetAttribute("where");
            }
        }

        #endregion

        #region Elements


        public IMetaElement Meta
        {
            get
            {
                return (IMetaElement)FindChildByRole(Meta_ROLE_ID);
            }
        }

        public IJcsCacheElement JcsCache
        {
            get
            {
                return (IJcsCacheElement)FindChildByRole(JcsCache_ROLE_ID);
            }
        }

        public ICacheElement Cache
        {
            get
            {
                return (ICacheElement)FindChildByRole(Cache_ROLE_ID);
            }
        }

        public IKeyElement Key
        {
            get
            {
                return (IKeyElement)FindChildByRole(Key_ROLE_ID);
            }
        }

        public IIndexElement Index
        {
            get
            {
                return (IIndexElement)FindChildByRole(Index_ROLE_ID);
            }
        }

        public IElementElement Element
        {
            get
            {
                return (IElementElement)FindChildByRole(Element_ROLE_ID);
            }
        }


        #endregion

 

        public override short GetChildRole(TreeElement child)
        {

                if (child is IMetaElement && ((XmlTag)child).TagName == "meta")
                    return Meta_ROLE_ID;
                else 
                
                if (child is IJcsCacheElement && ((XmlTag)child).TagName == "jcs-cache")
                    return JcsCache_ROLE_ID;
                else 
                
                if (child is ICacheElement && ((XmlTag)child).TagName == "cache")
                    return Cache_ROLE_ID;
                else 
                
                if (child is IKeyElement && ((XmlTag)child).TagName == "key")
                    return Key_ROLE_ID;
                else 
                
                if (child is IIndexElement && ((XmlTag)child).TagName == "index")
                    return Index_ROLE_ID;
                else 
                
                if (child is IElementElement && ((XmlTag)child).TagName == "element")
                    return Element_ROLE_ID;
                else 
                
        return base.GetChildRole(child);
        }
    }
}
